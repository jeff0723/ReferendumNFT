/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  DemocracyToken,
  DemocracyTokenInterface,
} from "../DemocracyToken";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "referendumNFTAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040518060400160405280600e81526020016d2232b6b7b1b930b1bcaa37b5b2b760911b81525060405180604001604052806003815260200162444f4d60e81b81525081600390805190602001906200006d929190620000bb565b50805162000083906004906020840190620000bb565b5062000091915050620000b7565b600580546001600160a01b0319166001600160a01b03929092169190911790556200019e565b3390565b828054620000c99062000161565b90600052602060002090601f016020900481019282620000ed576000855562000138565b82601f106200010857805160ff191683800117855562000138565b8280016001018555821562000138579182015b82811115620001385782518255916020019190600101906200011b565b50620001469291506200014a565b5090565b5b808211156200014657600081556001016200014b565b6002810460018216806200017657607f821691505b602082108114156200019857634e487b7160e01b600052602260045260246000fd5b50919050565b610b8a80620001ae6000396000f3fe608060405234801561001057600080fd5b50600436106100af5760003560e01c806306fdde03146100b4578063095ea7b3146100d257806318160ddd146100f257806323b872dd14610107578063313ce5671461011a578063395093511461012f57806340c10f191461014257806356e8771f1461015757806370a082311461016c57806395d89b411461017f578063a457c2d714610187578063a9059cbb1461019a578063dd62ed3e146101ad575b600080fd5b6100bc6101c0565b6040516100c9919061083c565b60405180910390f35b6100e56100e03660046107f4565b610252565b6040516100c99190610831565b6100fa61026f565b6040516100c99190610ade565b6100e56101153660046107b9565b610275565b61012261030e565b6040516100c99190610ae7565b6100e561013d3660046107f4565b610313565b6101556101503660046107f4565b610367565b005b61015f6103af565b6040516100c9919061081d565b6100fa61017a366004610766565b6103be565b6100bc6103dd565b6100e56101953660046107f4565b6103ec565b6100e56101a83660046107f4565b610465565b6100fa6101bb366004610787565b610479565b6060600380546101cf90610b19565b80601f01602080910402602001604051908101604052809291908181526020018280546101fb90610b19565b80156102485780601f1061021d57610100808354040283529160200191610248565b820191906000526020600020905b81548152906001019060200180831161022b57829003601f168201915b5050505050905090565b600061026661025f6104a4565b84846104a8565b50600192915050565b60025490565b600061028284848461055c565b6001600160a01b0384166000908152600160205260408120816102a36104a4565b6001600160a01b03166001600160a01b03168152602001908152602001600020549050828110156102ef5760405162461bcd60e51b81526004016102e690610991565b60405180910390fd5b610303856102fb6104a4565b8584036104a8565b506001949350505050565b601290565b60006102666103206104a4565b84846001600061032e6104a4565b6001600160a01b03908116825260208083019390935260409182016000908120918b16815292529020546103629190610af5565b6104a8565b6005546001600160a01b031661037b6104a4565b6001600160a01b0316146103a15760405162461bcd60e51b81526004016102e69061095a565b6103ab8282610686565b5050565b6005546001600160a01b031681565b6001600160a01b0381166000908152602081905260409020545b919050565b6060600480546101cf90610b19565b600080600160006103fb6104a4565b6001600160a01b03908116825260208083019390935260409182016000908120918816815292529020549050828110156104475760405162461bcd60e51b81526004016102e690610a62565b61045b6104526104a4565b858584036104a8565b5060019392505050565b60006102666104726104a4565b848461055c565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b3390565b6001600160a01b0383166104ce5760405162461bcd60e51b81526004016102e690610a1e565b6001600160a01b0382166104f45760405162461bcd60e51b81526004016102e6906108d2565b6001600160a01b0380841660008181526001602090815260408083209487168084529490915290819020849055517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259061054f908590610ade565b60405180910390a3505050565b6001600160a01b0383166105825760405162461bcd60e51b81526004016102e6906109d9565b6001600160a01b0382166105a85760405162461bcd60e51b81526004016102e69061088f565b6105b383838361074a565b6001600160a01b038316600090815260208190526040902054818110156105ec5760405162461bcd60e51b81526004016102e690610914565b6001600160a01b03808516600090815260208190526040808220858503905591851681529081208054849290610623908490610af5565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161066d9190610ade565b60405180910390a361068084848461074a565b50505050565b6001600160a01b0382166106ac5760405162461bcd60e51b81526004016102e690610aa7565b6106b86000838361074a565b80600260008282546106ca9190610af5565b90915550506001600160a01b038216600090815260208190526040812080548392906106f7908490610af5565b90915550506040516001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9061073a908590610ade565b60405180910390a36103ab600083835b505050565b80356001600160a01b03811681146103d857600080fd5b600060208284031215610777578081fd5b6107808261074f565b9392505050565b60008060408385031215610799578081fd5b6107a28361074f565b91506107b06020840161074f565b90509250929050565b6000806000606084860312156107cd578081fd5b6107d68461074f565b92506107e46020850161074f565b9150604084013590509250925092565b60008060408385031215610806578182fd5b61080f8361074f565b946020939093013593505050565b6001600160a01b0391909116815260200190565b901515815260200190565b6000602080835283518082850152825b818110156108685785810183015185820160400152820161084c565b818111156108795783604083870101525b50601f01601f1916929092016040019392505050565b60208082526023908201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260408201526265737360e81b606082015260800190565b60208082526022908201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604082015261737360f01b606082015260800190565b60208082526026908201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604082015265616c616e636560d01b606082015260800190565b6020808252601d908201527f4f6e6c79206d617374657220636f6e74726163742063616e206d696e74000000604082015260600190565b60208082526028908201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616040820152676c6c6f77616e636560c01b606082015260800190565b60208082526025908201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604082015264647265737360d81b606082015260800190565b60208082526024908201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646040820152637265737360e01b606082015260800190565b60208082526025908201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604082015264207a65726f60d81b606082015260800190565b6020808252601f908201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604082015260600190565b90815260200190565b60ff91909116815260200190565b60008219821115610b1457634e487b7160e01b81526011600452602481fd5b500190565b600281046001821680610b2d57607f821691505b60208210811415610b4e57634e487b7160e01b600052602260045260246000fd5b5091905056fea26469706673582212204f4615025ed56f56de1cfb9a5998532884e3db8ae19e20b5bef125568de1630e64736f6c63430008000033";

export class DemocracyToken__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<DemocracyToken> {
    return super.deploy(overrides || {}) as Promise<DemocracyToken>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): DemocracyToken {
    return super.attach(address) as DemocracyToken;
  }
  connect(signer: Signer): DemocracyToken__factory {
    return super.connect(signer) as DemocracyToken__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DemocracyTokenInterface {
    return new utils.Interface(_abi) as DemocracyTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DemocracyToken {
    return new Contract(address, _abi, signerOrProvider) as DemocracyToken;
  }
}
